---
- name: define unirun_open_wrt_config
  set_fact:
    unirun_open_wrt_config: "{{ unirun_open_wrt_release_version }}.{{ unirun_open_wrt_arch }}.config"

- name: create folders for docker files
  file: path={{ openwrt_config_dir }}/{{ item }} state=directory
  with_items:
    - "openwrt-{{ unirun_open_wrt_release_version }}-builder-{{ unirun_open_wrt_arch }}/logs/"
    - "openwrt-{{ unirun_open_wrt_release_version }}-builder-{{ unirun_open_wrt_arch }}/run/"

- name: put openwrt-{{ unirun_open_wrt_release_version }}-builder-{{ unirun_open_wrt_arch }} run and config files
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dst }}"
    mode: 0755
  with_items:
    - { src: universalrun.sh,                           dst: "{{ openwrt_config_dir }}/openwrt-{{ unirun_open_wrt_release_version }}-builder-{{ unirun_open_wrt_arch }}/run/universalrun.sh" }
    - { src: "wrtconfigs/{{ unirun_open_wrt_config }}", dst: "{{ openwrt_config_dir }}/openwrt-builder/config/{{ unirun_open_wrt_config }}" }
  register: imagegen_config

- name: check if image already exists
  shell: docker images| grep -E '^gitinsky/openwrt-{{ unirun_open_wrt_release_version }}-builder-{{ unirun_open_wrt_arch }}\s+latest'
  failed_when: false
  changed_when: imagegen_image.rc == 1
  register: imagegen_image

- name: If image already exists chech if it is based on latest baseimage
  shell: docker history {{ imagegen_image.stdout.split()[2] }} | grep $(docker images |grep -E '^gitinsky/openwrt-{{ unirun_open_wrt_release_version }}-builder\s+latest'|awk {'print $3'})
  register: based_on_latest
  changed_when: based_on_latest.rc == 1
  failed_when: false
  when: not imagegen_image.changed

- name: check if container is already running
  shell: docker ps| grep -E '\s+openwrt-{{ unirun_open_wrt_release_version }}-builder-{{ unirun_open_wrt_arch }}-docker-image-build\s+'
  failed_when: false
  changed_when: container.rc == 0
  register: container

- name: include docker image builder tasks
  include: imagegen.yml
  when: imagegen_config.changed or imagegen_image.changed or based_on_latest.changed or container.changed
